package dataset

import "gonum.org/v1/gonum/mat"

func MockSpiralData() mat.Dense {
	rawValues := []float64{0.000000, 0.000000, 0.001318, 0.010015, 0.008665, 0.018249, 0.006977, 0.029489, -0.002421, 0.040331, 0.020641, 0.046095, 0.022714, 0.056189, -0.019844, 0.067865, 0.015235, 0.079359, 0.053867, 0.073231, 0.079715, 0.062037, 0.111094, 0.001967, 0.107963, 0.055104, 0.118581, 0.056407, 0.140757, 0.013620, 0.151505, 0.001746, 0.161572, -0.003781, 0.150499, -0.082684, 0.141322, -0.114394, 0.182601, -0.059074, 0.151976, -0.133099, 0.167786, -0.129782, 0.145931, -0.167592, 0.227549, 0.046856, 0.236530, -0.053134, 0.082804, -0.238564, 0.088917, -0.247116, 0.083421, -0.259656, 0.098484, -0.265128, 0.085800, -0.280082, 0.280719, -0.114123, 0.070979, -0.304981, -0.189869, -0.261589, -0.164892, -0.289693, 0.014536, -0.343127, 0.085719, -0.342986, 0.100693, -0.349417, 0.160010, -0.337752, -0.349018, -0.159746, 0.146291, -0.365769, -0.017519, -0.403660, -0.410442, 0.055234, -0.222466, -0.361235, -0.094147, -0.424017, -0.444114, -0.017146, -0.434954, 0.132011, -0.462525, -0.044351, -0.436858, 0.185851, -0.400363, 0.273473, -0.454102, 0.196892, -0.465527, -0.195859, -0.438213, -0.270833, -0.520467, 0.070742, -0.455901, 0.280638, -0.352339, 0.416386, -0.328922, 0.447719, -0.176058, 0.537560, -0.395707, 0.418226, -0.170419, 0.560524, 0.034472, 0.594962, -0.275523, 0.539812, -0.112169, 0.605866, 0.023855, 0.625808, -0.279885, 0.571510, 0.064020, 0.643287, -0.442769, 0.484803, 0.652144, -0.138393, -0.238190, 0.633467, 0.633896, 0.264509, 0.628872, 0.300477, 0.331939, 0.624312, 0.277889, 0.661145, 0.727062, 0.017498, 0.681057, 0.282632, 0.658632, 0.353444, 0.565117, 0.504543, 0.764743, 0.067055, 0.772096, 0.093844, 0.784583, 0.071989, 0.759851, 0.243719, 0.779550, 0.212831, 0.561919, -0.594700, 0.807006, 0.186533, 0.837069, -0.046935, 0.804750, -0.268894, 0.134337, -0.848011, 0.636410, -0.591270, 0.873628, -0.095093, 0.558104, -0.691840, 0.716197, -0.543364, 0.637390, -0.648213, 0.019972, -0.918975, 0.225151, -0.901605, 0.207149, -0.916270, -0.072398, -0.946731, -0.094056, -0.954975, 0.823581, -0.511885, -0.882172, -0.426352, -0.687687, -0.712030, -0.175716, -0.984441, -0.000000, -0.000000, -0.008925, -0.004730, -0.019429, -0.005534, -0.023458, -0.019183, -0.023923, -0.032561, -0.020877, -0.045988, -0.016193, -0.058403, -0.069396, -0.013551, -0.058969, 0.055250, -0.083827, -0.035179, -0.096306, 0.030466, -0.101383, 0.045465, -0.107288, 0.056407, -0.127659, -0.030760, -0.130794, 0.053767, -0.076201, 0.130959, -0.120655, 0.107527, -0.112406, 0.129814, -0.134416, 0.122434, -0.078963, 0.174923, -0.055982, 0.194109, -0.012379, 0.211760, -0.076700, 0.208566, -0.005047, 0.232268, -0.221342, 0.098879, -0.171161, 0.185669, -0.042443, 0.259174, 0.017218, 0.272183, 0.000664, 0.282828, -0.058395, 0.287050, 0.244935, 0.178422, 0.264002, 0.168387, 0.115168, 0.302019, 0.315978, 0.106156, 0.324966, 0.111104, 0.016551, 0.353148, 0.153909, 0.329459, 0.245158, 0.282094, 0.383457, -0.017115, 0.239295, 0.312931, 0.403761, 0.015033, 0.407959, -0.071290, 0.281071, 0.317774, 0.434199, 0.011201, 0.419506, -0.146783, 0.386540, -0.239161, 0.459887, 0.066333, 0.409170, -0.240759, 0.404986, -0.266579, 0.010482, -0.494838, 0.371459, -0.342190, 0.146243, -0.493958, 0.111958, -0.513182, 0.478240, -0.240603, 0.098232, -0.536536, 0.554868, -0.027633, 0.272346, -0.495777, -0.294024, -0.495022, -0.215857, -0.544643, -0.197374, -0.562327, -0.413819, -0.442790, -0.194909, -0.584522, -0.569671, -0.260153, -0.500124, -0.393490, -0.342194, -0.548470, -0.385581, -0.531419, -0.632538, -0.210571, -0.676626, 0.013831, -0.609367, -0.316954, -0.615943, -0.326162, -0.707049, -0.005542, -0.685031, 0.212293, -0.649967, -0.326296, -0.688612, -0.263692, -0.747211, -0.019854, -0.751197, -0.098103, -0.753663, 0.146014, 0.154029, 0.762373, -0.641695, 0.457144, -0.702771, 0.378001, -0.806310, -0.053465, -0.816554, 0.051579, -0.221354, 0.798157, -0.254842, 0.798713, -0.468380, 0.707493, -0.315961, 0.798335, 0.328288, 0.804266, -0.317326, 0.819495, 0.466886, 0.756400, -0.512831, 0.738368, 0.245830, 0.875222, -0.865817, 0.308665, 0.256971, 0.893057, 0.292519, 0.892689, 0.163406, 0.935328, 0.955098, -0.092797, 0.477508, 0.843978, 0.457561, 0.866396, 0.562341, 0.814661, 0.901760, 0.432237, 0.000000, 0.000000, 0.010016, -0.001310, 0.020038, -0.002570, 0.030287, 0.000991, 0.038234, 0.013065, 0.044229, 0.024383, 0.056967, 0.020684, 0.052251, 0.047637, 0.078793, -0.017934, 0.090900, -0.001296, 0.039690, -0.092886, -0.024869, -0.108292, 0.082493, -0.088811, 0.034802, -0.126617, 0.120911, -0.073339, -0.062495, -0.138026, 0.066147, -0.147460, -0.026539, -0.169654, 0.106489, -0.147370, -0.038317, -0.188055, 0.007216, -0.201891, -0.024847, -0.210661, -0.003078, -0.222201, -0.080197, -0.218042, 0.015940, -0.241900, -0.098296, -0.232609, -0.014395, -0.262231, -0.242026, -0.125712, -0.160027, -0.233202, -0.289262, 0.046204, -0.175382, -0.247121, 0.031350, -0.311558, -0.079566, -0.313286, -0.298222, -0.148913, -0.247717, -0.237873, -0.298196, -0.189911, -0.311676, -0.187322, -0.363816, 0.085541, -0.361538, 0.128928, -0.373390, 0.125571, -0.211989, 0.343961, -0.321473, 0.261091, -0.265698, 0.330736, -0.086043, 0.425736, -0.442731, -0.038984, -0.223529, 0.395786, 0.004704, 0.464623, -0.143398, 0.452573, -0.409176, 0.260102, 0.221511, 0.442615, 0.117587, 0.491171, -0.142048, 0.495180, 0.137818, 0.506849, -0.094679, 0.526915, 0.211523, 0.502771, -0.282589, 0.478315, 0.347956, 0.445976, 0.561029, 0.129397, 0.490241, 0.320771, 0.555435, 0.216009, 0.542264, 0.270665, 0.403132, 0.465983, 0.623610, 0.057575, 0.257366, 0.581998, 0.540572, 0.354539, 0.655702, -0.033657, 0.465018, 0.477705, 0.461244, -0.495246, 0.636004, 0.259398, 0.621350, 0.315738, 0.557740, -0.434598, 0.645129, -0.313279, 0.592241, -0.422109, 0.709846, 0.199595, 0.711759, 0.228292, 0.536354, -0.535019, 0.332284, -0.692037, 0.367264, -0.685606, 0.132539, -0.776651, 0.753684, -0.262169, -0.249758, -0.768515, 0.319827, -0.753082, -0.045754, -0.827018, -0.344320, -0.764416, -0.764891, -0.367245, -0.013535, -0.858479, -0.675046, -0.546745, -0.638119, -0.604212, -0.427608, -0.779279, -0.544194, -0.715567, -0.440165, -0.795425, -0.848924, -0.352480, -0.891622, -0.261908, -0.547882, -0.763077, -0.949495, 0.000364, -0.774742, -0.566215, -0.962515, -0.117798, -0.640940, 0.741080, -0.893621, -0.425841, -0.953633, 0.300972}

	result := mat.NewDense(300, 2, rawValues)
	return *result
}

func MockDense1() mat.Dense {
	values := []float64{-0.005396, -0.008542, -0.000940, -0.009259, -0.000270, -0.006236, -0.009619, 0.005068, -0.005482, 0.001350, -0.006447, 0.004974, -0.000471, -0.000168, -0.004678, -0.008285, 0.002940, -0.003562, 0.003741, -0.009177}

	result := mat.NewDense(2, 10, values)
	return *result
}

func MockDense2() mat.Dense {
	values := []float64{-0.000867, 0.005643, 0.004412, -0.004332, -0.000393, -0.003329, 0.007714, -0.007004, 0.008049, -0.007374, 0.008976, 0.000663, -0.005666, -0.001738, 0.007680, -0.008505, 0.007098, 0.006915, 0.009525, 0.003113, -0.002175, -0.009548, 0.001263, -0.006185, 0.004172, 0.008485, -0.005622, -0.007133, -0.005400, 0.004831}

	result := mat.NewDense(10, 3, values)
	return *result
}
